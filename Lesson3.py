"""
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и
выполняющую их деление. Числа запрашивать у пользователя, предусмотреть
обработку ситуации деления на ноль.
"""


def split_(x, y):
    c = x / y if y != 0 else "На ноль делить нельзя!"
    print(c)
    return


num_1, num_2 = input("Введите первое число: "), input("Введите второе число: ")
if num_1.isdigit() and num_2.isdigit() is True:
    split_(int(num_1), int(num_2))
else:
    print("Какое-то из значений введено не верно!")

"""
2. Реализовать функцию, принимающую несколько параметров, описывающих данные
пользователя: имя, фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. Реализовать 
вывод данных о пользователе одной строкой.
"""


def data(name_, surname_, year_, city_, email_, phon_number):
    return print(f'Данные о пользователе : имя:{name_}, фамилия:{surname_},'
                 f' год рождения:{year_}, город проживания:{city_},'
                 f' email:{email_}, телефон:{phon_number} ')


data(email_=input("Email:"),
     city_=input("Город проживания:"),
     name_=input("Имя:"),
     surname_=input("Фамилия:"),
     year_=input("Год рождения:"),
     phon_number=input("телефон:"))

"""
3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, 
и возвращает сумму наибольших двух аргументов.
"""


def my_func(x, y, z):
    list_ = [x, y, z]
    list_.sort()
    sum_ = list_[-1] + list_[1]
    return sum_


num_1 = int(input("Введите первое число: "))
num_2 = int(input("Введите второе число: "))
num_3 = int(input("Введите второе число: "))

print(f'Сумма наибольших двух аргументов: {my_func(num_1, num_2, num_3)}')

"""
4. Программа принимает действительное положительное число x и целое 
отрицательное число y. Необходимо выполнить возведение числа x в степень y. 
Задание необходимо реализовать в виде функции my_func(x, y). При решении 
задания необходимо обойтись без встроенной функции возведения числа в степень.
"""


print("Возведение числа x в степень y")
a = abs(round(float(input("Введите действительное положительное число x: "))))
b = round(float(input("Введите целое отрицательное число y: ")))


def my_func(x, y):
    if b < 0:
        c = 1
        y = abs(y)
        for i in range(y):
            c *= x
        return print(1 / c)
    else:
        return print("Вы ввели некорректное второе число!")


my_func(a, b)


"""
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в 
степень с помощью оператора *. Второй — более сложная реализация без оператора
*, предусматривающая использование цикла.
"""
"""
1. Программа запрашивает у пользователя строку чисел, разделенных пробелом. 
При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить
ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных 
чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится
специальный символ, выполнение программы завершается. Если специальный символ 
введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к 
полученной ранее сумме и после этого завершить программу.
"""


def str_to_list_nums(line):
    def rtu(ds):
        ds = ds.replace(" ", "")
        if ds.isdigit():
            return True
        else:
            return False

    while rtu(line):
        line = list(line.split(" "))
        return line


def sum_nums(list_, c=0):
    if list_ is not None:
        length_nums = len(list_)
        for i in range(length_nums):
            c = c + int(list_[i])
        return c
    else:
        return False


sums_ = 0

while True:
    input_ = input("Ожидается ввод числа или Enter:").strip()
    n = str_to_list_nums(input_)
    if input_ == '':
        continue
    elif input_ == '@':
        print('Finish!')
        break
    elif sums_ != 0:
        sums_ = sum_nums(n, c=sums_)
        print(f'сумма: {sums_}')
        continue
    sums_ = sum_nums(n) if sum_nums(n) is not False else print('Incorrect')
    print(f'сумма: {sum_nums(n)}')

"""
2. Реализовать функцию int_func(), принимающую слово из маленьких латинских
букв и возвращающую его же, но с прописной первой буквой. Например, 
print(int_func(‘text’)) -> Text.

Продолжить работу над заданием. В программу должна попадать строка из слов, 
разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной 
буквы. Необходимо использовать написанную ранее функцию int_func().
"""


def int_func(strict):
    strict = str.title(strict)
    return strict


print(int_func('text'))
print(int_func(input('Введите предложение: ')))
